import eigen.Quat;
import eigen.Vec3;
import eigen.Mat4;

interface IView
{
	Vec3 position;
	Quat orientation;

	// Returns the OpenGL view matrix.
	void getViewMatrix( out Mat4 matrix );

	// Current orientation without a roll angle (i.e. with a right vector aligned with the ground).
	void getZeroRollOrientation( out Quat zeroRollOrientation );

	/*
		Calculates a pose that is aligned (forward) with the vector formed by
		this view position and the given \a point. The resulting pose position
		is at 2/3 of the lenght of that vector in the forward direction.
	 */
	void calculateNavigationToPoint( in Vec3 point, out Vec3 position, out Quat orientation );

	/*
		Calculates a camera pose aimed at the center of the given object,
		at a distance that allows the whole object to be seen.
	 */
	void calculateNavigationToObject( in IEntity object, out Vec3 position, out Quat orientation );
};
